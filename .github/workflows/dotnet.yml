# This workflow builds the project, packages the plugin DLL, and creates a GitHub release with the DLL attached when a tag is pushed.

name: .NET Build and Release Plugin

on:
  push:
    tags:
      - 'v*' # Trigger on tags like v1.0, v2.1.3, etc.
  workflow_dispatch: {} # Allow manual triggering

jobs:
  build-and-release:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        # Specify a .NET SDK version compatible with building your project (even if targeting .NET Framework)
        # Adjust if needed, 6.0.x is often sufficient for SDK-style projects targeting older frameworks.
        dotnet-version: '6.0.x' 

    - name: List Files for Debugging
      run: |
        echo "--- Workspace Root --- "
        dir
        echo "--- Lib Directory --- "
        dir lib
      shell: pwsh

    - name: Build plugin
      run: dotnet build LianLiGAIIPlugin.csproj --configuration Release -v normal

    - name: Get Tag Name
      id: get_tag
      # Extracts the tag name (e.g., v1.0.0) from the full ref (refs/tags/v1.0.0)
      run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      shell: bash 
      if: startsWith(github.ref, 'refs/tags/') # Ensure this step only runs on tag pushes
      
    - name: Package DLL into Zip
      id: package
      if: startsWith(github.ref, 'refs/tags/') # Only run on tag pushes
      run: |
        $dllPath = "${{ github.workspace }}\bin\Release\FanControl.LianLiGAII.dll"
        $zipFileName = "FanControl.LianLiGAII-${{ steps.get_tag.outputs.TAG_NAME }}.zip"
        $zipFilePath = "${{ github.workspace }}\$zipFileName"
        Compress-Archive -Path $dllPath -DestinationPath $zipFilePath
        echo "ZIP_FILE=$zipFileName" >> $env:GITHUB_OUTPUT
        echo "ZIP_PATH=$zipFilePath" >> $env:GITHUB_OUTPUT
      shell: pwsh

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      if: startsWith(github.ref, 'refs/tags/') # Only run on tag pushes
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.get_tag.outputs.TAG_NAME }}
        body: | # Optional: Add release notes here
          Release of the FanControl Lian Li GA II LCD Plugin version ${{ steps.get_tag.outputs.TAG_NAME }}.
          Contains FanControl.LianLiGAII.dll
        draft: false
        prerelease: false

    - name: Upload Release Asset (Zip)
      uses: actions/upload-release-asset@v1
      if: startsWith(github.ref, 'refs/tags/') # Only run on tag pushes
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ${{ steps.package.outputs.ZIP_PATH }}
        asset_name: ${{ steps.package.outputs.ZIP_FILE }}
        asset_content_type: application/zip
